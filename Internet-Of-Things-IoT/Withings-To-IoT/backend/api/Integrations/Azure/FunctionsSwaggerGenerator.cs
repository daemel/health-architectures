// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.

namespace H3.Integrations.Azure
{
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using global::Newtonsoft.Json.Linq;
    using H3.Core.Domain;
    using NSwag.SwaggerGeneration.AzureFunctionsV2;

    /// <summary>
    /// This class implements the H3 Swagger generation pattern by extracting documentation
    /// from annotations on HTTP-triggered Azure Function methods.
    /// <a href="https://github.com/Jusas/NSwag.AzureFunctionsV2">See documentation.</a>
    /// </summary>
    /// <remarks>
    /// Only functions marked with <see cref="PublicApiAttribute"/> are included in the output.
    /// </remarks>
    public class FunctionsSwaggerGenerator : ISwaggerGenerator
    {
        private const string AutoGeneratedPrefix = "/api";

        public async Task<string> GenerateSwagger()
        {
            var generator = new AzureFunctionsV2ToSwaggerGenerator(new AzureFunctionsV2ToSwaggerGeneratorSettings
            {
                Title = "H3 API",
            });

            var publicApis = AppDomain.CurrentDomain.GetAssemblies()
                .SelectMany(assembly => assembly.GetTypes())
                .Where(type => type.GetCustomAttributes(typeof(PublicApiAttribute), inherit: true).Length > 0);

            var document = await generator.GenerateForAzureFunctionClassesAsync(publicApis, functionNames: null);

            var swagger = JObject.Parse(document.ToJson());
            var paths = (JObject)swagger["paths"];

            foreach (var property in paths.Properties().ToArray())
            {
                if (property.Name.StartsWith(AutoGeneratedPrefix))
                {
                    paths.Remove(property.Name);
                    paths.Add(property.Name.Substring(AutoGeneratedPrefix.Length), property.Value);
                }
            }

            return swagger.ToString();
        }
    }
}
